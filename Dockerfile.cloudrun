# Dockerfile per simulare Cloud Run
FROM php:8.2-apache

# Installa dipendenze sistema
RUN apt-get update && apt-get install -y \
    libzip-dev \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    git \
    curl \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd \
    && docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath zip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Installa Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Installa Node.js per build frontend
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Configura Apache per Cloud Run
RUN a2enmod rewrite headers ssl
COPY apache-cloudrun.conf /etc/apache2/sites-available/000-default.conf

# Imposta directory di lavoro
WORKDIR /var/www/html

# Copia file progetto
COPY . .

# Installa dipendenze PHP
RUN cd laravel-backend && composer install --no-dev --optimize-autoloader

# Build frontend React
RUN cd react-frontend && npm install && npm run build

# Copia build React nel public di Laravel
RUN cp -r react-frontend/build/* laravel-backend/public/

# Imposta permessi
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html \
    && chmod -R 777 /var/www/html/laravel-backend/storage \
    && chmod -R 777 /var/www/html/laravel-backend/bootstrap/cache

# Genera chiave Laravel
RUN cd laravel-backend && php artisan key:generate --force

# Configura per produzione
RUN cd laravel-backend && \
    php artisan config:cache && \
    php artisan route:cache && \
    php artisan view:cache

# Espone porta 8080 (Cloud Run standard)
EXPOSE 8080

# Script di avvio per Cloud Run
COPY start-cloudrun.sh /start.sh
RUN chmod +x /start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/api/v1/health || exit 1

CMD ["/start.sh"]
